syntax = "proto3";

package muuzika.registry;

import "common.proto";

message ServerToRegistryMessage {
  int64 message_id = 1;
  oneof message {
    ServerRegistration registration = 2;
  }
}

message RegistryToServerMessage {
  int64 message_id = 1;
  oneof message {
    ServerId registration = 2;
  }
}

message RoomRegistryDefinition {
  common.RoomCode code = 1;
  string leader_username = 2;
  uint32 num_players = 3;
  bool is_public = 4;
  bool has_password = 5;
}

message ListRoomsRequest {
  common.PaginationRequest pagination = 1;
  optional string search = 2;
  optional bool only_password_free = 3;
}

message ListRoomsResponse {
  repeated RoomRegistryDefinition rooms = 1;
  common.PaginationResponse pagination = 2;
}


message CreateRoomRequest {
  string leader_username = 1;
  bool is_public = 2;
  optional string password = 3;
}

message CreateRoomResponse {
  common.RoomCode code = 1;
  ServerIdentifier server = 2;
}

message ServerRegistration {
  string address = 1;
  repeated RoomRegistryDefinition rooms = 2;
  optional uint32 capacity = 3;
  optional string callsign = 4;
  optional string description = 5;
}

message ServerId {
  int64 server_id = 1;
}

message ServerIdentifier {
  ServerId server_id = 1;
  string address = 2;
}

service RegistryService {
  rpc RegisterServer(stream ServerToRegistryMessage) returns (stream RegistryToServerMessage);
  rpc ListRooms(ListRoomsRequest) returns (ListRoomsResponse);
  rpc CreateRoom(CreateRoomRequest) returns (CreateRoomResponse);
}
